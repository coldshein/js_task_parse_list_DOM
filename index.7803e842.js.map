{"mappings":"ACGA,IAaQ,EAbF,EAAgB,SAAS,aAAa,CAAC,MAEvC,EAAgB,SAAC,CAAvB,EACE,IAAI,EAAW,EAAU,KAAK,CAAC,IAAI,CAAC,EAAE,CAItC,OAAO,WAFP,EAAW,EAAS,KAAK,CAAC,KAAK,IAAI,CAAC,IAGtC,EAKQ,EAAa,AAFD,MAAM,IAAI,CAAC,AA0BtB,EA1B2B,QAAQ,EAEb,IAAI,CAAC,SAAC,CAAA,CAAG,CAAtC,EACE,IAAM,EAAU,EAAc,EAAE,YAAY,CAAC,gBAG7C,OAAO,AAFS,EAAc,EAAE,YAAY,CAAC,gBAE5B,CACnB,GAEA,AAiBO,EAjBF,SAAS,CAAG,GACjB,EAAW,OAAO,CAAC,SAAC,CAApB,EAA6B,OAAA,AAgBtB,EAhB2B,WAAW,CAAC,E,GAMvC,AAFW,MAAM,IAAI,CAAC,AAalB,EAbuB,QAAQ,EAEzB,GAAG,CAAC,SAAC,CAAtB,EACE,MAAO,CACL,KAAM,EAAK,WAAW,CAAC,IAAI,GAC3B,SAAU,EAAK,YAAY,CAAC,iBAC5B,OAAQ,EAAc,EAAK,YAAY,CAAC,gBACxC,IAAK,SAAS,EAAK,YAAY,CAAC,YAClC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar unorderedList = document.querySelector(\"ul\");\nvar convertSalary = function(salaryStr) {\n    var cleanStr = salaryStr.split(\"$\")[1];\n    cleanStr = cleanStr.split(\",\").join(\"\");\n    return parseFloat(cleanStr);\n};\nvar sortList = function(list) {\n    var listArray = Array.from(list.children);\n    var sortedList = listArray.sort(function(a, b) {\n        var salaryA = convertSalary(a.getAttribute(\"data-salary\"));\n        var salaryB = convertSalary(b.getAttribute(\"data-salary\"));\n        return salaryB - salaryA;\n    });\n    list.innerHTML = \"\";\n    sortedList.forEach(function(item) {\n        return list.appendChild(item);\n    });\n};\nvar getEmployees = function(list) {\n    var listArray = Array.from(list.children);\n    return listArray.map(function(item) {\n        return {\n            name: item.textContent.trim(),\n            position: item.getAttribute(\"data-position\"),\n            salary: convertSalary(item.getAttribute(\"data-salary\")),\n            age: parseInt(item.getAttribute(\"data-age\"))\n        };\n    });\n};\nsortList(unorderedList);\ngetEmployees(unorderedList);\n\n//# sourceMappingURL=index.7803e842.js.map\n","'use strict';\n\n// write code here\nconst unorderedList = document.querySelector('ul');\n\nconst convertSalary = (salaryStr) => {\n  let cleanStr = salaryStr.split('$')[1];\n\n  cleanStr = cleanStr.split(',').join('');\n\n  return parseFloat(cleanStr);\n};\n\nconst sortList = (list) => {\n  const listArray = Array.from(list.children);\n\n  const sortedList = listArray.sort((a, b) => {\n    const salaryA = convertSalary(a.getAttribute('data-salary'));\n    const salaryB = convertSalary(b.getAttribute('data-salary'));\n\n    return salaryB - salaryA;\n  });\n\n  list.innerHTML = '';\n  sortedList.forEach((item) => list.appendChild(item));\n};\n\nconst getEmployees = (list) => {\n  const listArray = Array.from(list.children);\n\n  return listArray.map((item) => {\n    return {\n      name: item.textContent.trim(),\n      position: item.getAttribute('data-position'),\n      salary: convertSalary(item.getAttribute('data-salary')),\n      age: parseInt(item.getAttribute('data-age')),\n    };\n  });\n};\n\nsortList(unorderedList);\ngetEmployees(unorderedList);\n"],"names":["sortedList","unorderedList","document","querySelector","convertSalary","salaryStr","cleanStr","split","parseFloat","join","listArray","Array","from","list","children","sort","a","b","salaryA","getAttribute","salaryB","innerHTML","forEach","item","appendChild","map","name","textContent","trim","position","salary","age","parseInt"],"version":3,"file":"index.7803e842.js.map"}